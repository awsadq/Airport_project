package com.example.airport_project.service;

import com.example.airport_project.model.Booking;
import com.example.airport_project.model.Flight;
import com.example.airport_project.model.User;
import com.example.airport_project.repository.BookingRepository;
import com.example.airport_project.repository.FlightRepository;
import com.example.airport_project.repository.UserRepository;
import com.example.airport_project.web.dto.BookingDTO;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class BookingService {

    @Autowired
    private UserRepository userRepository;

    @Autowired
    private BookingRepository bookingRepository;

    @Autowired
    private FlightRepository flightRepository;

    public Long createBookingAndReturnId(BookingDTO dto, String email) {
        try {
            System.out.println("üì• –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞: " + dto);

            if (dto.getFlightId() == null || dto.getFlightId() <= 0) {
                throw new RuntimeException("üî• –û—à–∏–±–∫–∞: Flight ID –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å null –∏–ª–∏ <= 0");
            }

            User user = userRepository.findByEmail(email);
            if (user == null) {
                throw new RuntimeException("‚ùå –û—à–∏–±–∫–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email " + email + " –Ω–µ –Ω–∞–π–¥–µ–Ω");
            }

            Flight flight = flightRepository.findById(dto.getFlightId())
                    .orElseThrow(() -> new RuntimeException("‚ùå –û—à–∏–±–∫–∞: –†–µ–π—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"));

            Booking booking = new Booking();
            booking.setUser(user);
            booking.setFlight(flight);
            booking.setPassengerName(dto.getPassengerName().trim());
            booking.setPassportNumber(dto.getPassportNumber().trim());
            booking.setSeatNumber(dto.getSeatNumber().trim());
            booking.setBookingStatus("–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω");

            bookingRepository.save(booking);

            return booking.getId(); // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º ID
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏: " + e.getMessage());
            throw new RuntimeException("–û—à–∏–±–∫–∞ –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏: " + e.getMessage());
        }
    }

}
